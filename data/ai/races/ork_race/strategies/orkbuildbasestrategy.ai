----------------------------------------
-- File: 'orkbuildbasestrategy.ai'
-- Edited by Thudmeizer @ 22.10.2008

class 'OrkBuildBaseStrategy' (BuildBaseStrategy)

function OrkBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("ork_squad_armored_nob")
	self:AddDetectorUnit("ork_squad_warboss")
	self:AddDetectorUnit("ork_squad_mek_boy")
	
	-- Orks MUST be able to build their banners!!!
	CpuManager.AISettings.bTurrets = true
end

function OrkBuildBaseStrategy:ChooseBuildProgram()

	-- Check build program count
	if (table.getn(self.info.BuildPrograms) ~= 4) then
		return BuildBaseStrategy.ChooseBuildProgram(self)
	end

	-- Get map size and closest enemy distance
	local sMapSize, iClosestEnemyDistance = self:GetMapSize()
		
	-- Set probabilities of the strategies according to the map size
	local iBuildProgram1	-- Basic strategy
	local iBuildProgram2	-- Shoota rush
	local iBuildProgram3	-- Stormboy rush
	local iBuildProgram4	-- Nob rush
	if (sMapSize == "small" or iClosestEnemyDistance <= 70 or cpu_manager.iPlayerCount == 2) then
	
		iBuildProgram1 = 40
		iBuildProgram2 = 30
		iBuildProgram3 = 30
		iBuildProgram4 = 0
		
	elseif (sMapSize == "large" and cpu_manager.iPlayerCount >= 6) then
	
		iBuildProgram1 = 40
		iBuildProgram2 = 20
		iBuildProgram3 = 20
		iBuildProgram4 = 20
	else
	
		iBuildProgram1 = 40
		iBuildProgram2 = 30
		iBuildProgram3 = 30
		iBuildProgram4 = 0
	end
	
	-- Modify probabilities according to the closest enemy player
	local oEnemy = cpu_manager:FindClosestEnemyPlayer(false)
	local sEnemy = oEnemy:GetPlayerRaceName()		
	if (sEnemy == "ork_race") then
	
		iBuildProgram2 = iBuildProgram2 + 10
		iBuildProgram3 = iBuildProgram3 - 10
		
	elseif (sEnemy == "eldar_race" or sEnemy == "guard_race" or sEnemy == "tau_race" or sEnemy == "necron_race") then

		iBuildProgram1 = iBuildProgram1 - 10
		iBuildProgram2 = iBuildProgram2 - 10
		iBuildProgram3 = iBuildProgram3 + 20
	end
		
	-- Now choose a program
	iBuildProgram2 = iBuildProgram1 + iBuildProgram2
	iBuildProgram3 = iBuildProgram2 + iBuildProgram3
	iBuildProgram4 = iBuildProgram3 + iBuildProgram4
	local iRandom = math.random(1, 100)
	if (iRandom <= iBuildProgram1) then
		return 1
	elseif (iRandom <= iBuildProgram2) then
		return 2
	elseif (iRandom <= iBuildProgram3) then
		return 3
	elseif (iRandom <= iBuildProgram4) then
		return 4
	end
	return 1
end

function OrkBuildBaseStrategy:EvaluateSquadCap()

	-- Check if any waagh banners are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID("ork_waagh_banner")
	if (self:PlanExists("Build Building Plan", iBuildingID)) then
		return
	end

	-- Check squad and support cap
	if (self:CheckSquadCap(300, 0) or self:CheckSupportCap(150, 300)) then
	
		-- Build a Waagh Banner
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "ork_waagh_banner"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
		return
	end
end

function OrkBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "ork_hq"
		
	elseif (sType == "Generator") then
		return "ork_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "ork_bigger_generator"
		
	elseif (sType == "VehicleBuilding") then
		return "ork_mek_shop"
		
	elseif (sType == "ListeningPost") then
		return "ork_gork_totem"
		
	--elseif (sType == "Turret") then
		--return "ork_waagh_banner"

	elseif (sType == "Turret") then
		return nil
		
	elseif (sType == "Mine") then
		return "ork_mine_field"
	end
	
	return nil
end

function OrkBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "ork_waagh_banner_gunzaddon") then
		return "ork_waagh_banner"

	elseif (sType == "ork_waagh_banner_gunzaddon_2") then
		return "ork_waagh_banner"
		
	elseif (sType == "ork_gork_totem_addon_1") then
		return "ork_gork_totem"
		
	elseif (sType == "ork_gork_totem_addon_2") then
		return "ork_gork_totem"
		
	elseif (sType == "ork_hq_addon") then
		return "ork_hq"
	end
	return nil
end

-- Arkhan 01.2006: Inherited method to check if an addon is a tier addon
function OrkBuildBaseStrategy:IsTierAddon( sName, iTargetTier )

	-- Check addon name and target tier
	if (sName == "ork_hq_addon" and iTargetTier == 3) then
		return true
	end
	return false
end

-- Arkhan 11.2005: Returns the squad cap and support cap of the given squad
function OrkBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "ork_squad_slugga") then
		return 4, 0
	elseif (sSquadName == "ork_squad_shoota_boy") then
		return 4, 0
	elseif (sSquadName == "ork_squad_stormboy") then
		return 4, 0
	elseif (sSquadName == "ork_squad_tankbusta") then
		return 3, 0
	elseif (sSquadName == "ork_squad_nob") then
		return 10, 0
	elseif (sSquadName == "ork_squad_armored_nob") then
		return 2, 0
	elseif (sSquadName == "ork_flash_gitz_squad") then
		return 6, 0
	elseif (sSquadName == "ork_squad_mek_boy") then
		return 2, 0
	elseif (sSquadName == "ork_squad_warboss") then
		return 2, 0
	elseif (sSquadName == "ork_squad_trukk") then
		return 0, 3
	elseif (sSquadName == "ork_squad_wartrak") then
		return 0, 3
	elseif (sSquadName == "ork_squad_killa_kan") then
		return 0, 4
	elseif (sSquadName == "ork_squad_fighta_bomba") then
		return 0, 4
	elseif (sSquadName == "ork_squad_looted_tank") then
		return 0, 5
	elseif (sSquadName == "ork_squad_squiggoth") then
		return 0, 3
	end
	return 0, 0
end

function OrkBuildBaseStrategy:UpdateTierLevel()

	-- Reset tier level
	self.tierLevel = 1
	
	-- Prepare
	local iHQAddonID = cpu_manager.stats:GetAddOnID("ork_hq_addon")
	local oStats = cpu_manager.stats:GetPlayerStatsFromID( cpu_manager.player_id )
	
	-- Check HQ's for addons
	for oBase in oStats:GetBases() do

		-- Check for valid building
		if (oBase:IsValid() and not oBase:IsListeningPost()) then

			-- Check for HQ addon
			if (oBase:HasAddOn(iHQAddonID)) then
			
				-- We still have the proper add-on
				if (cpu_manager.cpu_player:IsResearchComplete("ork_research_extra_armour")) then
					self.tierLevel = 4
					return
				else
					self.tierLevel = 3
					return
				end
			end
		end
	end
	
	-- Check tier 2 condition
	if (build_manager:GetSquadCapCurrentMax() > 50) then
		self.tierLevel = 2
	end
end

function OrkBuildBaseStrategy:BuildFlexible()

	-- Dynamic research item syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount
	local iArmyStrength = cpu_manager:GetArmyStrength()
	local iCommanderSquads = self:CountSquads("ork_squad_mek_boy") + self:CountSquads("ork_squad_warboss")
	local iInfantrySquads = self:CountSquads("ork_squad_slugga") + self:CountSquads("ork_squad_shoota_boy") + self:CountSquads("ork_squad_stormboy") +
							self:CountSquads("ork_squad_nob") + self:CountSquads("ork_flash_gitz_squad") + self:CountSquads("ork_squad_tankbusta")

	-- Compute tier 1 researches
	if (self.tierLevel >= 1) then

		-- Compute builder research
		self:DynamicResearch("ork_research_grot_infiltrate", 1, 50, 20, 0, 0, "ork_squad_grot", 2)
		
		-- Compute secondary researches
		if (iArmyStrength >= 750) then

			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("ork_research_eavy_armor_boyz", 1, 75, 25, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_burna", 1, 50, 50, 0, 0, "ork_squad_slugga", 2)
			end
		end
		
		-- Compute bonus researches
		if (iArmyStrength >= 1250) then

			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("ork_research_speed_boost_stormboyz", 1, 25, 35, 0, 0, "ork_squad_stormboy", 2)
			end
		end
	end
	
	-- Compute tier 2 researches
	if (self.tierLevel >= 2) then

		-- Compute commander research
		if (iCommanderSquads >= 1) then
			self:DynamicResearch("ork_research_warboss_ranged_1", 2, 125, 50, 0, 0, "ork_squad_warboss", 1) 
		end
		
		-- Compute infantry research
		if (iInfantrySquads >= 3) then
			self:DynamicResearch("ork_research_moredakka", 2, 60, 20, 0, 0, nil, 0)
			self:DynamicResearch("ork_research_bigshoota", 2, 100, 25, 0, 0, "ork_squad_shoota_boy", 2)
		end	
		
		-- Compute secondary researches
		if (iArmyStrength >= 1250) then
		
			-- Compute commander research
			if (iCommanderSquads >= 1) then
				self:DynamicResearch("ork_research_tougher_bosses", 2, 100, 50, 0, 0, nil, 0)
			end
			
			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("ork_research_morechoppy", 2, 100, 50, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_tank_busta_infiltrate", 2, 50, 75, 0, 0, "ork_squad_tankbusta", 1)
			end
		end
		
		-- Compute bonus researches
		if (iArmyStrength >= 1750) then
		
			-- Compute commander research
			if (iCommanderSquads >= 1) then
				self:DynamicResearch("ork_research_big_mek_1", 2, 75, 75, 0, 0, "ork_squad_mek_boy", 1)
			end
		
			-- Compute vehicle researches
			if (self:CountSquads("ork_squad_trukk") + self:CountSquads("ork_squad_wartrak") > 1) then
		        self:DynamicResearch("ork_research_speed_boost", 2, 50, 50, 0, 0, nil, 0) 
			end
		end
	end
	
	-- Compute tier 3 researches
	if (self.tierLevel >= 3) then
	
		-- Compute infantry research
		if (iInfantrySquads >= 3) then
			self:DynamicResearch("ork_research_eavy_armor_boyz_2", 3, 75, 25, 0, 0, nil, 0)
			self:DynamicResearch("ork_research_evenmoredakka", 3, 80, 40, 0, 0, nil, 0)
		end
		
		-- Compute secondary researches
		if (iArmyStrength >= 1750) then
		
			-- Compute commander research
			if (iCommanderSquads >= 1) then
				self:DynamicResearch("ork_research_tougher_bosses_2", 3, 125, 50, 0, 0, nil, 0)
			end
			
			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("ork_research_evenmorechoppy", 3, 150, 100, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_burna_2", 3, 50, 50, 0, 0, "ork_squad_slugga", 2)
			end
		end
	end

	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then

		-- Dynamic buildings
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		self:DynamicBuild("ork_boy_hut", 2, 1, 800, 0, 0, 0)
		self:DynamicBuild("ork_mek_shop", 2, 2, 200, 600, 0, 0)
		self:DynamicBuild("ork_boy_hut", 3, 3, 2000, 0, 0, 0)
		self:DynamicBuild("ork_mek_shop", 3, 3, 500, 1500, 0, 0)
		self:DynamicBuild("ork_hq", 2, 2, 1500, 0, 0, 0)
	end
	
	-- Build free slugga squad if possible
	self:BuildFreeSlugga()
end

function OrkBuildBaseStrategy:BuildFreeSlugga()

	-- Check if ork recruitment research exists
	if (not cpu_manager.cpu_player:IsResearchComplete("ork_recruitment")) then
		return
	end
	
	-- Check if we have an ork hut
	if (self:GetBuildingCountByName("ork_boy_hut", false) <= 0) then
		return
	end
	
	-- Check if we have free squad cap
	local iSquadCap = self:GetUnitStats("ork_squad_slugga")
	if (self:GetSquadCapLeft() < iSquadCap) then
		return
	end
	
	-- Check if a plan exists for a slugga squad
	local iUnitID = cpu_manager.stats:GetSquadID("ork_squad_slugga")
	if (self:GetPlan("Build Unit Plan", iUnitID) ~= nil) then
		return
	end

	-- Try to build free slugga squad
	local tBuildType = CpuBuildType()
	tBuildType.btype = CpuPrerequisites.BT_Squad
	tBuildType.name = "ork_squad_slugga"
	if (self:TryBuild(tBuildType)) then
		return
	end
end

-- Arkhan 01.2006: Virtual method to check if force tech should be computed
function OrkBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end
	
	-- Check ressources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then

		-- Check resources
		if (iRequisition > 600 and iPower > 100) then
			return false
		end
		return true
		
	elseif (iTierLevel == 2) then

		-- Check build channel for mek shop
		if (self:GetBuildingCountByName("ork_mek_shop", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	elseif (iTierLevel == 3) then	

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier3 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
	end
	return false
end

-- Arkhan 03.2006: Return placement type for buildings
function OrkBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (cpu_manager:IsHQ(iBuildingID)) then
		return "HQ"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_boy_hut") or
			iBuildingID == cpu_manager.stats:GetBuildingID("ork_mek_shop")) then
		return "Military"
	--elseif (cpu_manager:IsTurret(iBuildingID)) then
		--return "Front2"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_waagh_banner")) then
		return "Front2"
	elseif (cpu_manager:IsMine(iBuildingID)) then
		return "Mine"
	elseif (cpu_manager:IsGenerator(iBuildingID) or
			iBuildingID == cpu_manager.stats:GetBuildingID("ork_pile_o_guns")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Arkhan 03.2006: Inherited method to modify squad demand
function OrkBuildBaseStrategy:ModifySquadDemand(iUnitID)

	-- No more docs then slugga/nob squads
	if (iUnitID == cpu_manager.stats:GetSquadID("ork_squad_bad_dok")) then

		-- Check number of ork squads
		local dok_attach = function( squad_ai )
			return (squad_ai:GetTactic():GetUnitStrength() >= 250 and squad_ai:CanReceiveAttachment())
		end
		local num_attach = self:CountSquads("ork_squad_slugga", dok_attach) + 
				   self:CountSquads("ork_squad_shoota_boy", dok_attach) +
				   self:CountSquads("ork_squad_tankbusta", dok_attach) +
				   self:CountSquads("ork_squad_nob", dok_attach) +
				   self:CountSquads("ork_flash_gitz_squad", dok_attach)

		-- Check number of docs
		local num_dok = self:CountSquads("ork_squad_bad_dok")
		if (num_dok >= num_attach) then
			return 0
		end
	end
	return BuildBaseStrategy.ModifySquadDemand(self, iUnitID)
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function OrkBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if (sName == "ork_squad_squiggoth") then
		return true
	end
	return false
end