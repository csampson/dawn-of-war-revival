----------------------------------------
-- File: 'sisterscanonesstactic.ai'
-- Edited by Thudmeizer @ 22.03.2008

class 'SistersCanonessTactic' (SistersInfantryTactic)

SistersCanoness = {}

function SistersCanonessTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Sisters Canoness Tactic")
end

function SistersCanonessTactic:InitAbilities()

	-- Init ability ID's
	if (SistersCanoness.divinelight_id == nil) then
		SistersCanoness.divinelight_id = cpu_manager.stats:GetAbilityID( "sisters_act_of_faith_divine_light" )
	end

	if (SistersCanoness.ascension_id == nil) then
		SistersCanoness.ascension_id = cpu_manager.stats:GetAbilityID( "sisters_act_of_faith_ascension" )
	end
end

function SistersCanonessTactic:DoAbilities()

	-- reduces enemy weapon accuracy and increases own weapon damage (Faith cost: 30)
	Ability.DoAbilityArea( self.squad_ai, SistersCanoness.divinelight_id, Ability.Filters.CloseEnemy, 10, 1)

	-- summons non-player controlled angels to fight for a short period (Faith cost: 90)
	Ability.DoAbilityArea( self.squad_ai, SistersCanoness.ascension_id, Ability.Filters.CloseEnemy, 10, 1)
end

-- Assassinate win condition -- never attack
function SistersCanonessTactic:IsAttacker()
	return (not cpu_manager.assassinate and self:IsCommanderAttacker())
end

-- Assassinate win condition -- never defend
function SistersCanonessTactic:IsDefender()
	return (not cpu_manager.assassinate and self:IsCommanderDefender())
end

function SistersCanonessTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update( self )) then
		return
	end
		
	-- Assassinate win condition -- never attach to a squad
    if (not cpu_manager.assassinate and self.squad_ai:GetMeleeStance() == SquadAI.MSTANCE_Assault) then
         
        if (self.squad_ai:IsInCombat() or self.squad_ai:WasRecentlyHurt()) then
        
            if (self:TryAttachSquad(false, true, 50, 150, self.m_fCommanderAttachHealth) == nil) then
                self:TryAttachSquadMelee()
            end
        end
    end
end
